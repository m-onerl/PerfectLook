Ułatwienie dotychczasowej sprzedaży jest głównym uzasadnieniem tej potrzeby. Obecnie zarządzanie sprzedażą wymaga dużego nakładu pracy – od obsługi zamówień, przez ręczną aktualizację stanów magazynowych, po odpowiadanie na zapytania klientów. Sklep internetowy pozwoli zautomatyzować te procesy, umożliwiając klientom samodzielne przeglądanie oferty, składanie zamówień oraz śledzenie statusu wysyłki.

Technologie wykorzystywane do realizacji
Do realizacji projektu sklepu internetowego wybrano następujące technologie, które zapewnią skalowalność, wydajność i łatwość rozbudowy:

Frontend (interfejs użytkownika):

HTML5 i CSS3 – do stworzenia struktury i stylu strony internetowej.
JavaScript – do dodania interaktywności na stronie (np. obsługa koszyka, filtrowanie produktów, paginacja).
EJS (Embedded JavaScript) – do dynamicznego renderowania stron internetowych, co pozwala na ładowanie danych z serwera bez konieczności przeładowywania całej strony.
Backend (serwer i logika biznesowa):

Node.js – serwer po stronie backendu, umożliwiający szybką i skalowalną obsługę zapytań. Node.js pozwala na utrzymanie spójności języka JavaScript zarówno po stronie klienta, jak i serwera.
Express.js – framework webowy oparty na Node.js, który ułatwia budowanie struktury aplikacji, zarządzanie trasami (routing) i integrację z bazą danych.
Baza danych:

MySQL – relacyjna baza danych, w której będą przechowywane informacje o produktach, zamówieniach, użytkownikach, a także stany magazynowe. MySQL zapewnia niezawodne zarządzanie danymi i pozwala na łatwe skalowanie wraz z rozwojem sklepu.
Repozytorium kodu:

GitHub – narzędzie do zarządzania wersjami kodu i współpracy w zespole. GitHub umożliwia śledzenie zmian, tworzenie branchy dla nowych funkcji oraz zarządzanie zgłoszeniami błędów i poprawek.
Analiza problemu – przygotowanie do realizacji projektu
Aby skutecznie rozpocząć prace nad projektem, konieczne jest dokładne przygotowanie oraz rozpisanie kolejnych etapów. Kluczowymi punktami w tym procesie są:

1. Projektowanie interfejsu użytkownika (UI/UX)
Pierwszym krokiem będzie zaprojektowanie interfejsu użytkownika za pomocą narzędzia Figma. Umożliwi to wizualizację wyglądu strony, jej funkcjonalności i struktury. Projektowanie interfejsu powinno uwzględniać:

Stronę główną, która umożliwi przeglądanie kategorii produktów, oferty specjalne i nowości.
Stronę produktu z dokładnym opisem, zdjęciami, wyborem rozmiaru i koloru oraz przyciskiem „Dodaj do koszyka”.
Funkcje koszyka zakupów oraz proces finalizacji zamówienia (checkout).
Formularze logowania i rejestracji użytkowników.
Na tym etapie musimy również przemyśleć responsywność strony, aby była dobrze dostosowana do urządzeń mobilnych, ponieważ wielu klientów będzie korzystać ze sklepu na telefonach i tabletach.

2. Projektowanie architektury aplikacji i bazy danych
Następnym krokiem będzie zaprojektowanie struktury aplikacji oraz bazy danych MySQL. Musimy opracować odpowiednią architekturę, która umożliwi płynne działanie sklepu oraz zarządzanie danymi. Baza danych powinna obejmować:

Tabele produktów z informacjami o nazwie, cenie, opisie, dostępności i zdjęciach.
Tabele użytkowników z danymi logowania oraz danymi osobistymi (adresy, zamówienia).
Tabele zamówień, gdzie będą zapisywane informacje o złożonych transakcjach i statusie wysyłki.
Dobrze zaprojektowana baza danych pozwoli na szybki dostęp do informacji oraz bezproblemowe zarządzanie stanami magazynowymi i zamówieniami.

3. Repozytorium kodu
W ramach pracy zespołowej wykorzystamy GitHub jako platformę do przechowywania kodu. Pozwoli nam to na efektywną współpracę, śledzenie zmian oraz zarządzanie wersjami projektu. Repozytorium będzie zorganizowane w sposób umożliwiający podział pracy na moduły:

Frontend – foldery z kodem HTML, CSS, JavaScript oraz szablonami EJS.
Backend – kod Node.js i Express do obsługi zapytań serwera.
Baza danych – skrypty SQL do tworzenia i aktualizacji tabel w MySQL.
4. Harmonogram realizacji projektu
Podział projektu na etapy pozwoli nam na sprawną realizację kolejnych kroków i kontrolę postępów. Oto przykładowy harmonogram prac:

Tydzień 1-2:
Zbiór wymagań projektowych.
Projektowanie interfejsu użytkownika w Figmie.
Stworzenie repozytorium na GitHubie.
Tydzień 3-4:
Implementacja struktury bazy danych MySQL.
Tworzenie szablonów EJS i pierwszych widoków frontendowych.
Tydzień 5-6:
Implementacja backendu w Node.js i Express.
Połączenie bazy danych z aplikacją, umożliwienie dodawania produktów, obsługa użytkowników.
Tydzień 7:
Testowanie funkcjonalności sklepu, takie jak dodawanie do koszyka, składanie zamówień.
Integracja z systemami płatności (np. Blik) oraz systemem wysyłki.
Tydzień 8:
Testowanie responsywności i wydajności na różnych urządzeniach.
Wdrożenie strony na serwer produkcyjny.